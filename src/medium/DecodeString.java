package medium;

import java.util.Stack;

/*
394.字符串解码
给定一个经过编码的字符串，返回它解码后的字符串。
编码规则为: k[encoded_string]，表示其中方括号内部的 encoded_string 正好重复 k 次。注意 k 保证为正整数。
你可以认为输入字符串总是有效的；输入字符串中没有额外的空格，且输入的方括号总是符合格式要求的。
此外，你可以认为原始数据不包含数字，所有的数字只表示重复的次数 k ，例如不会出现像 3a 或 2[4] 的输入。

示例 1：
输入：s = "3[a]2[bc]"
输出："aaabcbc"

示例 2：
输入：s = "3[a2[c]]"
输出："accaccacc"

示例 3：
输入：s = "2[abc]3[cd]ef"
输出："abcabccdcdcdef"

示例 4：
输入：s = "abc3[cd]xyz"
输出："abccdcdcdxyz"
 */
public class DecodeString {
    public static String decodeString(String s) {
        Stack<Integer> countstack = new Stack<>();
        Stack<StringBuilder> stringstack = new Stack<>();
        StringBuilder current = new StringBuilder();
        int k = 0;

        for (char ch:s.toCharArray()){
            if (Character.isDigit(ch)){
                k = k*10+(ch-'0');
            } else if (ch=='[') {
                //保存当前重复次数和当前字符串
                countstack.push(k);
                stringstack.push(current);
                //重置
                current = new StringBuilder();
                k=0;
            } else if (ch==']') {
                //完成一个编码串，拼接回上层
                int repeatTimes = countstack.pop();
                StringBuilder decode = stringstack.pop();
                for (int i = 0; i < repeatTimes; i++) {
                    decode.append(current);
                }
                current = decode;
            }
            else {
                current.append(ch);
            }
        }
        return current.toString();
    }

    public static void main(String[] args) {
        String ret = decodeString("3[a]2[bc]");
        System.out.println(ret);
    }

}
