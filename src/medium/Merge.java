package medium;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;

/*
56.合并区间
以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，并返回一个不重叠的区间数组，
该数组需恰好覆盖输入中的所有区间。

示例 1：
输入：intervals = [[1,3],[2,6],[8,10],[15,18]]
输出：[[1,6],[8,10],[15,18]]
解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].

示例 2：
输入：intervals = [[1,4],[4,5]]
输出：[[1,5]]
解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。
 */
public class Merge {
    public static int[][] merge(int[][] intervals) {
        if (intervals == null || intervals.length<=1) {
            return intervals;
        }
        // 按区间起始位置进行排序
        Arrays.sort(intervals, Comparator.comparingInt(a->a[0]));
        List<int[]> merged = new ArrayList<>();
        int[] current = intervals[0];

        for (int i = 1; i < intervals.length; i++) {
            // 如果当前区间与下一个区间有重叠，合并它们
            if (current[1] >= intervals[i][0]) {
                current[1] = Math.max(current[1],intervals[i][1]);
            }
            else {
                // 不重叠，保存当前区间，并开始下一个
                merged.add(current);
                current = intervals[i];
            }
        }
        // 添加最后一个区间
        merged.add(current);

        return merged.toArray(new int[merged.size()][]);
    }

    public static void main(String[] args) {
        int[][] ret = merge(new int[][]{{2,6},{1,3},{8,10},{15,18}});
        System.out.println(Arrays.deepToString(ret));
    }
}
